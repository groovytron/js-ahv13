{"version":3,"sources":["../src/index.js"],"names":["ValidatorAHV13","constructor","_calculateCheckSum","ahv12","totalChecksum","i","length","number","nextTimesTen","Math","ceil","_preProcessArray","arr","split","join","reverse","map","parseInt","checkSum","ahvnumber","isValid","ahv13","ahvArray","check","shift","module","exports"],"mappings":"AAAA,MAAMA,cAAN,CAAqB;;AAEjBC,kBAAc,CACb;;AAGDC,uBAAmBC,KAAnB,EAA0B;AACtB,YAAIC,gBAAgB,CAApB;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,kBAAME,SAASJ,MAAME,CAAN,CAAf;AACA,gBAAIA,IAAI,CAAJ,KAAU,CAAd,EAAiB;AACbD,gCAAgBA,gBAAgB,KAAKG,MAArC;AACH,aAFD,MAEO;AACHH,gCAAgBA,gBAAgBG,MAAhC;AACH;AACJ;AACD,cAAMC,eAAeC,KAAKC,IAAL,CAAUN,gBAAgB,EAA1B,IAAgC,EAArD;AACA,eAAOI,eAAeJ,aAAtB;AACH;;AAEDO,qBAAiBC,GAAjB,EAAqB;AAClB,eAAOA,IAAIC,KAAJ,CAAU,GAAV,EAAeC,IAAf,CAAoB,EAApB,EAAwBD,KAAxB,CAA8B,EAA9B,EAAkCE,OAAlC,GAA4CC,GAA5C,CAAiDT,UAAUU,SAASV,MAAT,CAA3D,CAAP;AACF;AACD;;;;;;AAMAW,aAASC,SAAT,EAAmB;AAClB,eAAO,KAAKjB,kBAAL,CAAwB,KAAKS,gBAAL,CAAsBQ,SAAtB,CAAxB,CAAP;AACA;;AAED;;;;;AAKAC,YAAQC,KAAR,EAAe;AACX,cAAMC,WAAW,KAAKX,gBAAL,CAAsBU,KAAtB,CAAjB;AACA,cAAME,QAAQD,SAASE,KAAT,EAAd;AACA,cAAMN,WAAW,KAAKhB,kBAAL,CAAwBoB,QAAxB,CAAjB;AACA,eAAO,KAAKpB,kBAAL,CAAwBoB,QAAxB,MAAsCC,KAA7C;AACH;AA3CgB;AA6CrBE,OAAOC,OAAP,GAAiB1B,cAAjB","file":"index.js","sourcesContent":["class ValidatorAHV13 {\n\n    constructor() {\n    }\n\n\n    _calculateCheckSum(ahv12) {\n        let totalChecksum = 0;\n        for (let i = 0; i < ahv12.length; i++) {\n            const number = ahv12[i];\n            if (i % 2 === 0) {\n                totalChecksum = totalChecksum + 13 * number;\n            } else {\n                totalChecksum = totalChecksum + number;\n            }\n        }\n        const nextTimesTen = Math.ceil(totalChecksum / 10) * 10;\n        return nextTimesTen - totalChecksum;\n    }\n\n    _preProcessArray(arr){\n       return arr.split('.').join('').split('').reverse().map( number => parseInt(number));\n    }\n    /**\n     * AHV Number without last number, like: ('756.9217.0769.85')\n     * @param ahv12\n     * @returns {number} for this case 5\n     * @private\n     */\n    checkSum(ahvnumber){\n     return this._calculateCheckSum(this._preProcessArray(ahvnumber));\n    }\n\n    /**\n     * validates a AHV13 Number with or without dots in the form of '756.9217.0769.85'\n     * @param ahv13\n     * @returns {boolean}\n     */\n    isValid(ahv13) {\n        const ahvArray = this._preProcessArray(ahv13);\n        const check = ahvArray.shift();\n        const checkSum = this._calculateCheckSum(ahvArray);\n        return this._calculateCheckSum(ahvArray) === check;\n    }\n}\nmodule.exports = ValidatorAHV13;"]}