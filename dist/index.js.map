{"version":3,"sources":["../src/index.js"],"names":["ValidatorAHV13","constructor","_removeDots","ahv13","split","join","calculateCheckSum","ahv12","totalChecksum","i","length","number","isValid","cleanedAHV13","ahvArray","reverse","map","parseInt","check","shift","module","exports"],"mappings":"AAAA,MAAMA,cAAN,CAAqB;;AAEjBC,kBAAc,CACb;;AAEDC,gBAAYC,KAAZ,EAAkB;AACd,eAAOA,MAAMC,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,EAAtB,CAAP;AACH;;AAED;;;;;;AAMAC,sBAAkBC,KAAlB,EAAwB;AACpB,YAAIC,gBAAc,CAAlB;AACA,aAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAEF,MAAMG,MAAvB,EAA8BD,GAA9B,EAAkC;AAC9B,kBAAME,SAASJ,MAAME,CAAN,CAAf;AACA,gBAAGA,IAAE,CAAF,KAAM,CAAT,EAAW;AACPD,gCAAgBA,gBAAgB,KAAKG,MAArC;AACH,aAFD,MAEK;AACDH,gCAAgBA,gBAAgBG,MAAhC;AACH;AACJ;AACD,eAAOH,gBAAgB,EAAvB;AACH;;AAED;;;;;AAKAI,YAAQT,KAAR,EAAe;AACX,cAAMU,eAAe,KAAKX,WAAL,CAAiBC,KAAjB,CAArB;AACA,cAAMW,WAAWD,aAAaT,KAAb,CAAmB,EAAnB,EAAuBW,OAAvB,GAAiCC,GAAjC,CAAsCL,UAAUM,SAASN,MAAT,CAAhD,CAAjB;AACA,cAAMO,QAAQJ,SAASK,KAAT,EAAd;AACA,eAAO,KAAKb,iBAAL,CAAuBQ,QAAvB,MAAsCI,KAA7C;AACH;AAtCgB;AAwCrBE,OAAOC,OAAP,GAAiBrB,cAAjB","file":"index.js","sourcesContent":["class ValidatorAHV13 {\n\n    constructor() {\n    }\n\n    _removeDots(ahv13){\n        return ahv13.split('.').join(\"\");\n    }\n\n    /**\n     * AHV Number in reversed order, without checksum\n     * @param ahv12\n     * @returns {number}\n     * @private\n     */\n    calculateCheckSum(ahv12){\n        let totalChecksum=0;\n        for(let i = 0; i<ahv12.length;i++){\n            const number = ahv12[i];\n            if(i%2===0){\n                totalChecksum = totalChecksum + 13 * number;\n            }else{\n                totalChecksum = totalChecksum + number;\n            }\n        }\n        return totalChecksum % 10;\n    }\n\n    /**\n     * validates a AHV13 Number with or without dots in the form of '756.9217.0769.85'\n     * @param ahv13\n     * @returns {boolean}\n     */\n    isValid(ahv13) {\n        const cleanedAHV13 = this._removeDots(ahv13);\n        const ahvArray = cleanedAHV13.split('').reverse().map( number => parseInt(number));\n        const check = ahvArray.shift();\n        return this.calculateCheckSum(ahvArray)  === check;\n    }\n}\nmodule.exports = ValidatorAHV13;"]}